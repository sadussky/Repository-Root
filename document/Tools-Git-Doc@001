

git clone 
git add -> git commit -> git push 
git commit -m 'some commit text'
git commit -F ./COMMIT-MSG  ## 提交时从文件中获取注释 
git status |START|---------------
/**-----------------------------
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
-----------------------------**/

##|START|=================================================================
git diff ##
git diff --cached 
git diff --staged 

##|START|=================================================================
Removing Files
$ rm grit.gemspec
$ git status

Then, if you run git rm, it stages the file’s removal:
$ git rm grit.gemspec

##|START|=================================================================
git log 
git log -p 
git log -stat 
git log --pretty=oneline 
git log --pretty=oneline --graph

##|START|=================================================================
$ git clone https://github.com/schacon/ticgit
Cloning into 'ticgit'...
remote: Reusing existing pack: 1857, done.
remote: Total 1857 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (1857/1857), 374.35 KiB | 268.00 KiB/s, done.
Resolving deltas: 100% (772/772), done.
Checking connectivity... done.
$ cd ticgit
$ git remote -v 
origin  https://github.com/sadussky/Repository-Webpack2.git (fetch)
origin  https://github.com/sadussky/Repository-Webpack2.git (push)

git remote add
[shortname] [url]:

$ git remote
origin
$ git remote add pb https://github.com/paulboone/ticgit
$ git remote -v
origin https://github.com/schacon/ticgit (fetch)
origin https://github.com/schacon/ticgit (push)
pb https://github.com/paulboone/ticgit (fetch)
pb https://github.com/paulboone/ticgit (push)


##|START|=================================================================
Pushing to Your Remotes
When you have your project at a point that you want to share, you have to push it upstream. The command for this
is simple: git push [remote-name] [branch-name]. If you want to push your master branch to your origin server
(again, cloning generally sets up both of those names for you automatically), then you can run this to push any
commits you’ve done back up to the server:

$ git push origin master

This command works only if you cloned from a server to which you have write access and if nobody has pushed
in the meantime. If you and someone else clone at the same time and they push upstream and then you push
upstream, your push will rightly be rejected. You’ll have to pull down their work first and incorporate it into yours
before you’ll be allowed to push. See Chapter 3 for more detailed information on how to push to remote servers.

$ git remote show origin
/**-----------------------------
* remote origin
URL: https://github.com/my-org/complex-project
Fetch URL: https://github.com/my-org/complex-project
Push URL: https://github.com/my-org/complex-project
HEAD branch: master
Remote branches:
master tracked
dev-branch tracked
markdown-strip tracked
issue-43 new (next fetch will store in remotes/origin)
issue-45 new (next fetch will store in remotes/origin)
refs/remotes/origin/issue-11 stale (use 'git remote prune' to remove)
 
Local branches configured for 'git pull':
dev-branch merges with remote dev-branch
master merges with remote master
Local refs configured for 'git push':
dev-branch pushes to dev-branch (up to date)
markdown-strip pushes to markdown-strip (up to date)
master pushes to master (up to date)
-----------------------------**/

This command shows which branch is automatically pushed to when you run git push while on certain branches.
It also shows you which remote branches on the server you don’t yet have, which remote branches you have that have
been removed from the server, and multiple branches that are automatically merged when you run git pull.


##注意：在push代码之前，先执行 
$ git fetch origin  master  ##获取远程仓库最新的代码，然后跟本地 staged的代码比较合并，之后重新commit 并 push 


# 取回远程仓库的变化，并与本地分支合并
$ git pull [remote] [branch]

git init 将一个目录初始化为 Git 仓库
git clone <git地址> 克隆到本地

git pull <远端别名><远端branch> 抓取并合并

git remote add <别名> <git地址> 设置远端别名

git remote <-v> 列出远端，-v为详细信息

git remote show <远端别名> 查看远端信息

git remote rm <远端别名> 删除远端

git remote update <远端别名> 更新分支列表 

git push <远端别名> <本地分支>

git add .  添加当前目录的所有文件到暂存区
# 添加指定文件到暂存区
$ git add [file1] [file2] ...

# 提交暂存区到仓库区
git commit -m "First commit"是提交这里要在-m参数后面加上提交参数，很重要哟，不然会被认

为不合法不能提交.

# 列出所有本地分支
$ git branch

# 列出所有远程分支
$ git branch -r

# 列出所有本地分支和远程分支
$ git branch -a

